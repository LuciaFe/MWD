/* eslint-disable */
/* prettier-ignore */

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: never;
  subscription: 'Subscription';
  types: {
    'Boolean': unknown;
    'ComponentCard': { kind: 'OBJECT'; name: 'ComponentCard'; fields: { 'Image': { name: 'Image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ComponentCard_aggregated': { kind: 'OBJECT'; name: 'ComponentCard_aggregated'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'ComponentCard_aggregated_fields'; ofType: null; } }; 'avgDistinct': { name: 'avgDistinct'; type: { kind: 'OBJECT'; name: 'ComponentCard_aggregated_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'OBJECT'; name: 'ComponentCard_aggregated_count'; ofType: null; } }; 'countAll': { name: 'countAll'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'countDistinct': { name: 'countDistinct'; type: { kind: 'OBJECT'; name: 'ComponentCard_aggregated_count'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'ComponentCard_aggregated_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'ComponentCard_aggregated_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'ComponentCard_aggregated_fields'; ofType: null; } }; 'sumDistinct': { name: 'sumDistinct'; type: { kind: 'OBJECT'; name: 'ComponentCard_aggregated_fields'; ofType: null; } }; }; };
    'ComponentCard_aggregated_count': { kind: 'OBJECT'; name: 'ComponentCard_aggregated_count'; fields: { 'Image': { name: 'Image'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ComponentCard_aggregated_fields': { kind: 'OBJECT'; name: 'ComponentCard_aggregated_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'ComponentCard_filter': { kind: 'INPUT_OBJECT'; name: 'ComponentCard_filter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'number_filter_operators'; ofType: null; }; defaultValue: null }, { name: 'Image'; type: { kind: 'INPUT_OBJECT'; name: 'string_filter_operators'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'string_filter_operators'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'INPUT_OBJECT'; name: 'string_filter_operators'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'INPUT_OBJECT'; name: 'string_filter_operators'; ofType: null; }; defaultValue: null }, { name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ComponentCard_filter'; ofType: null; }; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ComponentCard_filter'; ofType: null; }; }; defaultValue: null }]; };
    'ComponentCard_mutated': { kind: 'OBJECT'; name: 'ComponentCard_mutated'; fields: { 'data': { name: 'data'; type: { kind: 'OBJECT'; name: 'ComponentCard'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'ENUM'; name: 'EventEnum'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'ComponentGridCards': { kind: 'OBJECT'; name: 'ComponentGridCards'; fields: { 'cards': { name: 'cards'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1'; ofType: null; }; } }; 'cards_func': { name: 'cards_func'; type: { kind: 'OBJECT'; name: 'count_functions'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'ComponentGridCards_ComponentCard_1': { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1'; fields: { 'ComponentCard_id': { name: 'ComponentCard_id'; type: { kind: 'OBJECT'; name: 'ComponentCard'; ofType: null; } }; 'ComponentGridCards_id': { name: 'ComponentGridCards_id'; type: { kind: 'OBJECT'; name: 'ComponentGridCards'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'ComponentGridCards_ComponentCard_1_aggregated': { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated_fields'; ofType: null; } }; 'avgDistinct': { name: 'avgDistinct'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated_count'; ofType: null; } }; 'countAll': { name: 'countAll'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'countDistinct': { name: 'countDistinct'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated_count'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated_fields'; ofType: null; } }; 'sumDistinct': { name: 'sumDistinct'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated_fields'; ofType: null; } }; }; };
    'ComponentGridCards_ComponentCard_1_aggregated_count': { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated_count'; fields: { 'ComponentCard_id': { name: 'ComponentCard_id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'ComponentGridCards_id': { name: 'ComponentGridCards_id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ComponentGridCards_ComponentCard_1_aggregated_fields': { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated_fields'; fields: { 'ComponentCard_id': { name: 'ComponentCard_id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'ComponentGridCards_id': { name: 'ComponentGridCards_id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'ComponentGridCards_ComponentCard_1_filter': { kind: 'INPUT_OBJECT'; name: 'ComponentGridCards_ComponentCard_1_filter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'number_filter_operators'; ofType: null; }; defaultValue: null }, { name: 'ComponentGridCards_id'; type: { kind: 'INPUT_OBJECT'; name: 'ComponentGridCards_filter'; ofType: null; }; defaultValue: null }, { name: 'ComponentCard_id'; type: { kind: 'INPUT_OBJECT'; name: 'ComponentCard_filter'; ofType: null; }; defaultValue: null }, { name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ComponentGridCards_ComponentCard_1_filter'; ofType: null; }; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ComponentGridCards_ComponentCard_1_filter'; ofType: null; }; }; defaultValue: null }]; };
    'ComponentGridCards_ComponentCard_1_mutated': { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_mutated'; fields: { 'data': { name: 'data'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'ENUM'; name: 'EventEnum'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'ComponentGridCards_aggregated': { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated_fields'; ofType: null; } }; 'avgDistinct': { name: 'avgDistinct'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated_count'; ofType: null; } }; 'countAll': { name: 'countAll'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'countDistinct': { name: 'countDistinct'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated_count'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated_fields'; ofType: null; } }; 'sumDistinct': { name: 'sumDistinct'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated_fields'; ofType: null; } }; }; };
    'ComponentGridCards_aggregated_count': { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated_count'; fields: { 'cards': { name: 'cards'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ComponentGridCards_aggregated_fields': { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'ComponentGridCards_filter': { kind: 'INPUT_OBJECT'; name: 'ComponentGridCards_filter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'number_filter_operators'; ofType: null; }; defaultValue: null }, { name: 'cards'; type: { kind: 'INPUT_OBJECT'; name: 'ComponentGridCards_ComponentCard_1_filter'; ofType: null; }; defaultValue: null }, { name: 'cards_func'; type: { kind: 'INPUT_OBJECT'; name: 'count_function_filter_operators'; ofType: null; }; defaultValue: null }, { name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ComponentGridCards_filter'; ofType: null; }; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ComponentGridCards_filter'; ofType: null; }; }; defaultValue: null }]; };
    'ComponentGridCards_mutated': { kind: 'OBJECT'; name: 'ComponentGridCards_mutated'; fields: { 'data': { name: 'data'; type: { kind: 'OBJECT'; name: 'ComponentGridCards'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'ENUM'; name: 'EventEnum'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'EventEnum': { name: 'EventEnum'; enumValues: 'create' | 'update' | 'delete'; };
    'Float': unknown;
    'GraphQLStringOrFloat': unknown;
    'ID': unknown;
    'Int': unknown;
    'JSON': unknown;
    'Page': { kind: 'OBJECT'; name: 'Page'; fields: { 'Content': { name: 'Content'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Page_Content'; ofType: null; }; } }; 'Content_func': { name: 'Content_func'; type: { kind: 'OBJECT'; name: 'count_functions'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'Page_Content': { kind: 'OBJECT'; name: 'Page_Content'; fields: { 'Page_id': { name: 'Page_id'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'collection': { name: 'collection'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'item': { name: 'item'; type: { kind: 'UNION'; name: 'Page_Content_item_union'; ofType: null; } }; }; };
    'Page_Content_aggregated': { kind: 'OBJECT'; name: 'Page_Content_aggregated'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'Page_Content_aggregated_fields'; ofType: null; } }; 'avgDistinct': { name: 'avgDistinct'; type: { kind: 'OBJECT'; name: 'Page_Content_aggregated_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'OBJECT'; name: 'Page_Content_aggregated_count'; ofType: null; } }; 'countAll': { name: 'countAll'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'countDistinct': { name: 'countDistinct'; type: { kind: 'OBJECT'; name: 'Page_Content_aggregated_count'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'Page_Content_aggregated_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'Page_Content_aggregated_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'Page_Content_aggregated_fields'; ofType: null; } }; 'sumDistinct': { name: 'sumDistinct'; type: { kind: 'OBJECT'; name: 'Page_Content_aggregated_fields'; ofType: null; } }; }; };
    'Page_Content_aggregated_count': { kind: 'OBJECT'; name: 'Page_Content_aggregated_count'; fields: { 'Page_id': { name: 'Page_id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'collection': { name: 'collection'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'item': { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'Page_Content_aggregated_fields': { kind: 'OBJECT'; name: 'Page_Content_aggregated_fields'; fields: { 'Page_id': { name: 'Page_id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'Page_Content_filter': { kind: 'INPUT_OBJECT'; name: 'Page_Content_filter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'number_filter_operators'; ofType: null; }; defaultValue: null }, { name: 'Page_id'; type: { kind: 'INPUT_OBJECT'; name: 'Page_filter'; ofType: null; }; defaultValue: null }, { name: 'collection'; type: { kind: 'INPUT_OBJECT'; name: 'string_filter_operators'; ofType: null; }; defaultValue: null }, { name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'Page_Content_filter'; ofType: null; }; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'Page_Content_filter'; ofType: null; }; }; defaultValue: null }, { name: 'item__ComponentGridCards'; type: { kind: 'INPUT_OBJECT'; name: 'ComponentGridCards_filter'; ofType: null; }; defaultValue: null }, { name: 'item__ComponentCard'; type: { kind: 'INPUT_OBJECT'; name: 'ComponentCard_filter'; ofType: null; }; defaultValue: null }]; };
    'Page_Content_item_union': { kind: 'UNION'; name: 'Page_Content_item_union'; fields: {}; possibleTypes: 'ComponentCard' | 'ComponentGridCards'; };
    'Page_Content_mutated': { kind: 'OBJECT'; name: 'Page_Content_mutated'; fields: { 'data': { name: 'data'; type: { kind: 'OBJECT'; name: 'Page_Content'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'ENUM'; name: 'EventEnum'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'Page_aggregated': { kind: 'OBJECT'; name: 'Page_aggregated'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'Page_aggregated_fields'; ofType: null; } }; 'avgDistinct': { name: 'avgDistinct'; type: { kind: 'OBJECT'; name: 'Page_aggregated_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'OBJECT'; name: 'Page_aggregated_count'; ofType: null; } }; 'countAll': { name: 'countAll'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'countDistinct': { name: 'countDistinct'; type: { kind: 'OBJECT'; name: 'Page_aggregated_count'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'Page_aggregated_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'Page_aggregated_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'Page_aggregated_fields'; ofType: null; } }; 'sumDistinct': { name: 'sumDistinct'; type: { kind: 'OBJECT'; name: 'Page_aggregated_fields'; ofType: null; } }; }; };
    'Page_aggregated_count': { kind: 'OBJECT'; name: 'Page_aggregated_count'; fields: { 'Content': { name: 'Content'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'Page_aggregated_fields': { kind: 'OBJECT'; name: 'Page_aggregated_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'Page_filter': { kind: 'INPUT_OBJECT'; name: 'Page_filter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'number_filter_operators'; ofType: null; }; defaultValue: null }, { name: 'Content'; type: { kind: 'INPUT_OBJECT'; name: 'Page_Content_filter'; ofType: null; }; defaultValue: null }, { name: 'Content_func'; type: { kind: 'INPUT_OBJECT'; name: 'count_function_filter_operators'; ofType: null; }; defaultValue: null }, { name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'Page_filter'; ofType: null; }; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'Page_filter'; ofType: null; }; }; defaultValue: null }]; };
    'Page_mutated': { kind: 'OBJECT'; name: 'Page_mutated'; fields: { 'data': { name: 'data'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'ENUM'; name: 'EventEnum'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'ComponentCard': { name: 'ComponentCard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ComponentCard'; ofType: null; }; }; }; } }; 'ComponentCard_aggregated': { name: 'ComponentCard_aggregated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ComponentCard_aggregated'; ofType: null; }; }; }; } }; 'ComponentCard_by_id': { name: 'ComponentCard_by_id'; type: { kind: 'OBJECT'; name: 'ComponentCard'; ofType: null; } }; 'ComponentCard_by_version': { name: 'ComponentCard_by_version'; type: { kind: 'OBJECT'; name: 'version_ComponentCard'; ofType: null; } }; 'ComponentGridCards': { name: 'ComponentGridCards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ComponentGridCards'; ofType: null; }; }; }; } }; 'ComponentGridCards_ComponentCard_1': { name: 'ComponentGridCards_ComponentCard_1'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1'; ofType: null; }; }; }; } }; 'ComponentGridCards_ComponentCard_1_aggregated': { name: 'ComponentGridCards_ComponentCard_1_aggregated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_aggregated'; ofType: null; }; }; }; } }; 'ComponentGridCards_ComponentCard_1_by_id': { name: 'ComponentGridCards_ComponentCard_1_by_id'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1'; ofType: null; } }; 'ComponentGridCards_ComponentCard_1_by_version': { name: 'ComponentGridCards_ComponentCard_1_by_version'; type: { kind: 'OBJECT'; name: 'version_ComponentGridCards_ComponentCard_1'; ofType: null; } }; 'ComponentGridCards_aggregated': { name: 'ComponentGridCards_aggregated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ComponentGridCards_aggregated'; ofType: null; }; }; }; } }; 'ComponentGridCards_by_id': { name: 'ComponentGridCards_by_id'; type: { kind: 'OBJECT'; name: 'ComponentGridCards'; ofType: null; } }; 'ComponentGridCards_by_version': { name: 'ComponentGridCards_by_version'; type: { kind: 'OBJECT'; name: 'version_ComponentGridCards'; ofType: null; } }; 'Page': { name: 'Page'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Page'; ofType: null; }; }; }; } }; 'Page_Content': { name: 'Page_Content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Page_Content'; ofType: null; }; }; }; } }; 'Page_Content_aggregated': { name: 'Page_Content_aggregated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Page_Content_aggregated'; ofType: null; }; }; }; } }; 'Page_Content_by_id': { name: 'Page_Content_by_id'; type: { kind: 'OBJECT'; name: 'Page_Content'; ofType: null; } }; 'Page_Content_by_version': { name: 'Page_Content_by_version'; type: { kind: 'OBJECT'; name: 'version_Page_Content'; ofType: null; } }; 'Page_aggregated': { name: 'Page_aggregated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Page_aggregated'; ofType: null; }; }; }; } }; 'Page_by_id': { name: 'Page_by_id'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'Page_by_version': { name: 'Page_by_version'; type: { kind: 'OBJECT'; name: 'version_Page'; ofType: null; } }; }; };
    'String': unknown;
    'Subscription': { kind: 'OBJECT'; name: 'Subscription'; fields: { 'ComponentCard_mutated': { name: 'ComponentCard_mutated'; type: { kind: 'OBJECT'; name: 'ComponentCard_mutated'; ofType: null; } }; 'ComponentGridCards_ComponentCard_1_mutated': { name: 'ComponentGridCards_ComponentCard_1_mutated'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_ComponentCard_1_mutated'; ofType: null; } }; 'ComponentGridCards_mutated': { name: 'ComponentGridCards_mutated'; type: { kind: 'OBJECT'; name: 'ComponentGridCards_mutated'; ofType: null; } }; 'Page_Content_mutated': { name: 'Page_Content_mutated'; type: { kind: 'OBJECT'; name: 'Page_Content_mutated'; ofType: null; } }; 'Page_mutated': { name: 'Page_mutated'; type: { kind: 'OBJECT'; name: 'Page_mutated'; ofType: null; } }; }; };
    'count_function_filter_operators': { kind: 'INPUT_OBJECT'; name: 'count_function_filter_operators'; isOneOf: false; inputFields: [{ name: 'count'; type: { kind: 'INPUT_OBJECT'; name: 'number_filter_operators'; ofType: null; }; defaultValue: null }]; };
    'count_functions': { kind: 'OBJECT'; name: 'count_functions'; fields: { 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'number_filter_operators': { kind: 'INPUT_OBJECT'; name: 'number_filter_operators'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'GraphQLStringOrFloat'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'GraphQLStringOrFloat'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'GraphQLStringOrFloat'; ofType: null; }; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'GraphQLStringOrFloat'; ofType: null; }; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'GraphQLStringOrFloat'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'GraphQLStringOrFloat'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'GraphQLStringOrFloat'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'GraphQLStringOrFloat'; ofType: null; }; defaultValue: null }, { name: '_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_nnull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_between'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'GraphQLStringOrFloat'; ofType: null; }; }; defaultValue: null }, { name: '_nbetween'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'GraphQLStringOrFloat'; ofType: null; }; }; defaultValue: null }]; };
    'string_filter_operators': { kind: 'INPUT_OBJECT'; name: 'string_filter_operators'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_contains'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_icontains'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_ncontains'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_starts_with'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nstarts_with'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_istarts_with'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nistarts_with'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_ends_with'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nends_with'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_iends_with'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_niends_with'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: '_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_nnull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_empty'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_nempty'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'version_ComponentCard': { kind: 'OBJECT'; name: 'version_ComponentCard'; fields: { 'Image': { name: 'Image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'version_ComponentGridCards': { kind: 'OBJECT'; name: 'version_ComponentGridCards'; fields: { 'cards': { name: 'cards'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'cards_func': { name: 'cards_func'; type: { kind: 'OBJECT'; name: 'count_functions'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'version_ComponentGridCards_ComponentCard_1': { kind: 'OBJECT'; name: 'version_ComponentGridCards_ComponentCard_1'; fields: { 'ComponentCard_id': { name: 'ComponentCard_id'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'ComponentGridCards_id': { name: 'ComponentGridCards_id'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'version_Page': { kind: 'OBJECT'; name: 'version_Page'; fields: { 'Content': { name: 'Content'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'Content_func': { name: 'Content_func'; type: { kind: 'OBJECT'; name: 'count_functions'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'version_Page_Content': { kind: 'OBJECT'; name: 'version_Page_Content'; fields: { 'Page_id': { name: 'Page_id'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'collection': { name: 'collection'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'item': { name: 'item'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
  };
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}